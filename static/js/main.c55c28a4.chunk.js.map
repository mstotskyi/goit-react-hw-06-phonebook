{"version":3,"sources":["redux/reducers.js","redux/store.js","components/ContactForm/ContactForm.js","redux/actions.js","components/Filter/Filter.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["rootReducer","combineReducers","contacts","state","JSON","parse","window","localStorage","getItem","type","payload","filter","contact","id","store","createStore","composeWithDevTools","connect","dispatch","addNewContacts","obj","useState","name","setName","number","setNumber","IdName","uuid","IdNumber","handleOnChange","e","target","value","resetForm","onSubmit","preventDefault","some","element","toLocaleLowerCase","alert","console","log","className","styles","form","htmlFor","label","formInput","pattern","title","required","onChange","handleOnChangefilter","IdFilter","disputch","deleteContact","contactName","contactDeleteBtn","onClick","filteredContacts","includes","contactList","map","contactListItem","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mRAyBMA,EAAcC,0BAAgB,CAClCC,SAxBsB,WAGlB,IAAD,EAFHC,EAEG,iEAFKC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,yBAE5C,QAFiE,GAEjE,yCADDC,EACC,EADDA,KAAMC,EACL,EADKA,QAER,OAAQD,GACN,IAAK,iBACH,MAAM,GAAN,mBAAWN,GAAX,CAAkBO,IACpB,IAAK,gBACH,OAAOP,EAAMQ,QAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOH,KAChD,QACE,OAAOP,IAeXQ,OAXoB,WAAoC,IAAnCR,EAAkC,uDAA1B,GAA0B,yCAApBM,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACzC,MACO,iBADCD,EAEGC,EAEAP,KASEH,ICxBAc,EAFDC,sBAAYf,EAAagB,iC,+CCwFvC,IAYeC,eAZS,SAAAd,GACtB,MAAO,CACLD,SAAUC,EAAMD,aAIO,SAAAgB,GACzB,MAAO,CACLC,eAAgB,SAAAC,GAAG,OAAIF,ECpGY,CACrCT,KAAM,iBACNC,QDkGwDU,QAI3CH,EAhGf,YAAoD,IAA7BE,EAA4B,EAA5BA,eAAgBjB,EAAY,EAAZA,SACrC,EAAwBmB,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAASC,cACTC,EAAWD,cAsBXE,EAAiB,SAAAC,GACrB,OAAQA,EAAEC,OAAOT,MACf,IAAK,OACHC,EAAQO,EAAEC,OAAOC,OACjB,MACF,IAAK,SACHP,EAAUK,EAAEC,OAAOC,OACnB,MACF,QACE,SAIAC,EAAY,WAChBV,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAMS,SAvCe,SAAAJ,GACrBA,EAAEK,iBACF,IAAMf,EAAM,CACVE,KAAMA,EACNE,OAAQA,EACRX,GAAIc,eAON,GALuBzB,EAASkC,MAC9B,SAAAC,GAAO,OACLA,EAAQf,KAAKgB,sBAAwBlB,EAAIE,KAAKgB,uBAIhD,OAAOC,MAAM,GAAD,OAAInB,EAAIE,KAAR,oCAEdkB,QAAQC,IAAIrB,GACZD,EAAeC,GACfa,KAsBgCS,UAAWC,IAAOC,KAAlD,UACE,uBAAOC,QAASnB,EAAQgB,UAAWC,IAAOG,MAA1C,kBAGA,uBACA,uBACEJ,UAAWC,IAAOI,UAClBlC,GAAIa,EACJjB,KAAK,OACLa,KAAK,OACLU,MAAOV,EACP0B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUtB,IAEZ,uBACA,uBAAOgB,QAASjB,EAAUc,UAAWC,IAAOG,MAA5C,oBAGA,uBACA,uBACEJ,UAAWC,IAAOI,UAClBlC,GAAIe,EACJnB,KAAK,MACLa,KAAK,SACLU,MAAOR,EACPwB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUtB,IAEZ,uBACA,wBAAQpB,KAAK,SAAb,+BE5DN,IAOeQ,cAAQ,MAPI,SAAAC,GACzB,MAAO,CACLkC,qBAAsB,SAAAtB,GAAC,OACrBZ,EDpBwC,CAC5CT,KAAM,eACNC,QCkB0CoB,EAAEC,OAAOC,YAItCf,EA7Bf,YAA2C,IAAzBmC,EAAwB,EAAxBA,qBACVC,EAAW1B,cAEjB,OACE,qCACE,uBAAOkB,QAASQ,EAAhB,mCACA,uBACA,uBACExC,GAAIwC,EACJ5C,KAAK,OACLa,KAAK,SACL0B,QAAQ,yHACRG,SAAUC,U,gBCOlB,IAMenC,cAAQ,MANI,SAAAqC,GACzB,MAAO,CACLC,cAAe,SAAA1C,GAAE,OAAIyC,EFrBkB,CACzC7C,KAAM,gBACNC,QEmBsDG,QAIzCI,EAzBf,YAA2D,IAApCO,EAAmC,EAAnCA,OAAQX,EAA2B,EAA3BA,GAAIS,EAAuB,EAAvBA,KAAMiC,EAAiB,EAAjBA,cACvC,OACE,qCACE,uBAAMb,UAAWC,IAAOa,YAAxB,UAAsClC,EAAtC,OACA,qCAAQE,KACR,wBACEkB,UAAWC,IAAOc,iBAClBhD,KAAK,SACLI,GAAIA,EACJ6C,QAAS,WACPH,EAAc1C,IALlB,0BCqBN,IAOeI,eAPS,SAAAd,GACtB,MAAO,CACLD,SAAUC,EAAMD,SAChBS,OAAQR,EAAMQ,UAIsB,KAAzBM,EAhCf,YAA4C,IAArBf,EAAoB,EAApBA,SAAUS,EAAU,EAAVA,OAQzBgD,GANJnB,QAAQC,IAAI9B,GACLT,EAASS,QAAO,SAAAC,GAAO,OAC5BA,EAAQU,KAAKgB,oBAAoBsB,SAASjD,EAAO2B,yBAMrD,OACE,oBAAII,UAAWC,IAAOkB,YAAtB,SACGF,EAAiBG,KAAI,SAAAlD,GAAO,OAC3B,oBAAqB8B,UAAWC,IAAOoB,gBAAvC,SACE,cAAC,EAAD,CACElD,GAAID,EAAQC,GACZS,KAAMV,EAAQU,KACdE,OAAQZ,EAAQY,UAJXZ,EAAQC,YCbV,SAASmD,IACtB,OACE,qBAAKtB,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,2CACA,cAAC,EAAD,IACA,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,iBAAd,sBACA,cAAC,EAAD,IACA,cAAC,EAAD,YCNVuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUrD,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINsD,SAASC,eAAe,U,kBChB1BC,EAAOC,QAAU,CAAC,YAAc,iCAAiC,gBAAkB,qCAAqC,iBAAmB,wC,kBCA3ID,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,UAAY,kC","file":"static/js/main.c55c28a4.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\nconst contactsReducer = (\n  state = JSON.parse(window.localStorage.getItem('localContacts')) ?? [],\n  { type, payload },\n) => {\n  switch (type) {\n    case 'AddNewContacts':\n      return [...state, payload];\n    case 'DeleteContact':\n      return state.filter(contact => contact.id !== payload);\n    default:\n      return state;\n  }\n};\n\nconst filterReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case 'Changefilter':\n      return payload;\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../redux/actions';\nimport styles from 'components/ContactForm/ContactForm.module.css';\n\nfunction ContactForm({ addNewContacts, contacts }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const IdName = uuid();\n  const IdNumber = uuid();\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    const obj = {\n      name: name,\n      number: number,\n      id: uuid(),\n    };\n    const existedContact = contacts.some(\n      element =>\n        element.name.toLocaleLowerCase() === obj.name.toLocaleLowerCase(),\n    );\n\n    if (existedContact) {\n      return alert(`${obj.name} is already in the contact list`);\n    }\n    console.log(obj);\n    addNewContacts(obj);\n    resetForm();\n  };\n\n  const handleOnChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleOnSubmit} className={styles.form}>\n      <label htmlFor={IdName} className={styles.label}>\n        Name\n      </label>\n      <br />\n      <input\n        className={styles.formInput}\n        id={IdName}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleOnChange}\n      />\n      <br />\n      <label htmlFor={IdNumber} className={styles.label}>\n        Number\n      </label>\n      <br />\n      <input\n        className={styles.formInput}\n        id={IdNumber}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleOnChange}\n      />\n      <br />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addNewContacts: obj => dispatch(actions.addNewCntacts(obj)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  contacts: PropTypes.array,\n  addNewCntacts: PropTypes.func,\n};\n","export const addNewCntacts = value => ({\n  type: 'AddNewContacts',\n  payload: value,\n});\n\nexport const deleteContact = contactId => ({\n  type: 'DeleteContact',\n  payload: contactId,\n});\n\nexport const handleOnChangefilter = value => ({\n  type: 'Changefilter',\n  payload: value,\n});\n","import PropTypes from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions';\n\nfunction Filter({ handleOnChangefilter }) {\n  const IdFilter = uuid();\n\n  return (\n    <>\n      <label htmlFor={IdFilter}>Find contacts by name</label>\n      <br />\n      <input\n        id={IdFilter}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={handleOnChangefilter}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  handleOnChangefilter: PropTypes.func,\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleOnChangefilter: e =>\n      dispatch(actions.handleOnChangefilter(e.target.value)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport styles from 'components/ContactList/ContactList.module.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions';\n\nfunction ContactItem({ number, id, name, deleteContact }) {\n  return (\n    <>\n      <span className={styles.contactName}>{name}:</span>\n      <span> {number}</span>\n      <button\n        className={styles.contactDeleteBtn}\n        type=\"button\"\n        id={id}\n        onClick={() => {\n          deleteContact(id);\n        }}\n      >\n        Delete\n      </button>\n    </>\n  );\n}\n\nconst mapDispatchToProps = disputch => {\n  return {\n    deleteContact: id => disputch(actions.deleteContact(id)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ContactItem);\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport ContactItem from 'components/ContactList/ContactItem';\nimport styles from 'components/ContactList/ContactList.module.css';\n\nfunction ContactList({ contacts, filter }) {\n  const contactsFilter = () => {\n    console.log(filter);\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n    );\n  };\n\n  const filteredContacts = contactsFilter();\n\n  return (\n    <ul className={styles.contactList}>\n      {filteredContacts.map(contact => (\n        <li key={contact.id} className={styles.contactListItem}>\n          <ContactItem\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts,\n    filter: state.filter,\n  };\n};\n\nexport default connect(mapStateToProps, null)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n};\n","import './App.css';\nimport React from 'react';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <div className=\"Phonebook\">\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <div className=\"contacts-wrapper\">\n          <h2 className=\"contacts-title\">Contacts</h2>\n          <Filter />\n          <ContactList />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// import actions from 'redux/actions';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__27dHd\",\"contactListItem\":\"ContactList_contactListItem__3WBhO\",\"contactDeleteBtn\":\"ContactList_contactDeleteBtn__3vlK7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3dYc0\",\"label\":\"ContactForm_label__qk_CA\",\"formInput\":\"ContactForm_formInput__e7dlp\"};"],"sourceRoot":""}